{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\SunilL\\\\Downloads\\\\assign-app\\\\frontend\\\\components\\\\Search.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useLazyQuery } from \"@apollo/client\";\nimport gql from \"graphql-tag\";\nimport { useRouter } from \"next/dist/client/router\";\nconst SEARCH_USERS_QUERY = gql`\n  query SEARCH_USERS_QUERY($searchTerm: String!) {\n    searchTerms: allUsers(where: { OR: [{ name_contains_i: $searchTerm }] }) {\n      id\n      name\n    }\n  }\n`;\nexport default function Search() {\n  const router = useRouter();\n  const [findUsers, {\n    loading,\n    data,\n    error\n  }] = useLazyQuery(SEARCH_USERS_QUERY, {\n    fetchPolicy: \"no-cache\"\n  });\n  const users = (data === null || data === void 0 ? void 0 : data.searchTerms) || [];\n  const findUsersButChill = debounce(findUsers, 350);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", _objectSpread(_objectSpread({}, getComboboxProps()), {}, {\n      children: /*#__PURE__*/_jsxDEV(\"input\", _objectSpread({}, getInputProps({\n        type: \"search\",\n        placeholder: \"Search for an user\",\n        id: \"search\",\n        className: loading ? \"loading\" : \"\"\n      })), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", _objectSpread({}, getMenuProps()), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}","map":{"version":3,"sources":["C:/Users/SunilL/Downloads/assign-app/frontend/components/Search.js"],"names":["useLazyQuery","gql","useRouter","SEARCH_USERS_QUERY","Search","router","findUsers","loading","data","error","fetchPolicy","users","searchTerms","findUsersButChill","debounce","getComboboxProps","getInputProps","type","placeholder","id","className","getMenuProps"],"mappings":";;;;;;;;;;AAAA,SAASA,YAAT,QAA6B,gBAA7B;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,SAAT,QAA0B,yBAA1B;AAEA,MAAMC,kBAAkB,GAAGF,GAAI;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA,CAPA;AASA,eAAe,SAASG,MAAT,GAAkB;AAC/B,QAAMC,MAAM,GAAGH,SAAS,EAAxB;AAEA,QAAM,CAACI,SAAD,EAAY;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,IAAX;AAAiBC,IAAAA;AAAjB,GAAZ,IAAwCT,YAAY,CACxDG,kBADwD,EAExD;AACEO,IAAAA,WAAW,EAAE;AADf,GAFwD,CAA1D;AAOA,QAAMC,KAAK,GAAG,CAAAH,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEI,WAAN,KAAqB,EAAnC;AAEA,QAAMC,iBAAiB,GAAGC,QAAQ,CAACR,SAAD,EAAY,GAAZ,CAAlC;AACA,sBACE;AAAA,4BACE,+CAASS,gBAAgB,EAAzB;AAAA,6BACE,mCACMC,aAAa,CAAC;AAChBC,QAAAA,IAAI,EAAE,QADU;AAEhBC,QAAAA,WAAW,EAAE,oBAFG;AAGhBC,QAAAA,EAAE,EAAE,QAHY;AAIhBC,QAAAA,SAAS,EAAEb,OAAO,GAAG,SAAH,GAAe;AAJjB,OAAD,CADnB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAWE,iCAASc,YAAY,EAArB;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA,kBADF;AAeD","sourcesContent":["import { useLazyQuery } from \"@apollo/client\";\r\nimport gql from \"graphql-tag\";\r\nimport { useRouter } from \"next/dist/client/router\";\r\n\r\nconst SEARCH_USERS_QUERY = gql`\r\n  query SEARCH_USERS_QUERY($searchTerm: String!) {\r\n    searchTerms: allUsers(where: { OR: [{ name_contains_i: $searchTerm }] }) {\r\n      id\r\n      name\r\n    }\r\n  }\r\n`;\r\n\r\nexport default function Search() {\r\n  const router = useRouter();\r\n\r\n  const [findUsers, { loading, data, error }] = useLazyQuery(\r\n    SEARCH_USERS_QUERY,\r\n    {\r\n      fetchPolicy: \"no-cache\",\r\n    }\r\n  );\r\n\r\n  const users = data?.searchTerms || [];\r\n\r\n  const findUsersButChill = debounce(findUsers, 350);\r\n  return (\r\n    <>\r\n      <div {...getComboboxProps()}>\r\n        <input\r\n          {...getInputProps({\r\n            type: \"search\",\r\n            placeholder: \"Search for an user\",\r\n            id: \"search\",\r\n            className: loading ? \"loading\" : \"\",\r\n          })}\r\n        />\r\n      </div>\r\n      <div {...getMenuProps()}></div>\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}