{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\SunilL\\\\Downloads\\\\assign-app\\\\frontend\\\\components\\\\CreateUser.js\";\nimport { useMutation } from \"@apollo/client\";\nimport gql from \"graphql-tag\";\nimport { Router } from \"next/dist/client/router\";\nimport useForm from \"../lib/useForm\";\nimport { ALL_USERS_QUERY } from \"./Users\";\nconst CREATE_USER_MUTATION = gql`\n  mutation CREATE_USER_MUTATION(\n    $name: String!\n    $email: String!\n    $password: String!\n    $phoneNumber: Int!\n  ) {\n    createUser(\n      data: {\n        name: $name\n        email: $email\n        password: $password\n        phoneNumber: $phoneNumber\n      }\n    ) {\n      id\n      name\n      email\n      phoneNumber\n    }\n  }\n`;\nexport default function CreateUser() {\n  const {\n    inputs,\n    handleChange,\n    clearForm,\n    resetForm\n  } = useForm({});\n  console.log(inputs);\n  const [createUser, {\n    loading,\n    error,\n    data\n  }] = useMutation(CREATE_USER_MUTATION, {\n    variables: inputs,\n    refetchQueries: [{\n      query: ALL_USERS_QUERY\n    }]\n  });\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: async e => {\n      e.preventDefault();\n      const res = await createUser();\n      clearForm();\n      Router.push({\n        pathname: `/user/${res.data.createUser.id}`\n      });\n    },\n    children: /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: [\"Name\", /*#__PURE__*/_jsxDEV(\"input\", {\n          required: true,\n          type: \"text\",\n          id: \"name\",\n          placeholder: \"Name\",\n          value: inputs.name,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: [\"Email\", \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n          required: true,\n          type: \"email\",\n          placeholder: \"Email address\",\n          value: inputs.email,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: [\"Password\", \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n          required: true,\n          type: \"password\",\n          placeholder: \"password\",\n          value: inputs.password,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"phoneNumber\",\n        children: [\"Phone Number\", \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"phoneNumber\",\n          placeholder: \"phone number\",\n          value: inputs.phoneNumber,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["C:/Users/SunilL/Downloads/assign-app/frontend/components/CreateUser.js"],"names":["useMutation","gql","Router","useForm","ALL_USERS_QUERY","CREATE_USER_MUTATION","CreateUser","inputs","handleChange","clearForm","resetForm","console","log","createUser","loading","error","data","variables","refetchQueries","query","e","preventDefault","res","push","pathname","id","name","email","password","phoneNumber"],"mappings":"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","sourcesContent":["import { useMutation } from \"@apollo/client\";\r\nimport gql from \"graphql-tag\";\r\nimport { Router } from \"next/dist/client/router\";\r\nimport useForm from \"../lib/useForm\";\r\nimport { ALL_USERS_QUERY } from \"./Users\";\r\n\r\nconst CREATE_USER_MUTATION = gql`\r\n  mutation CREATE_USER_MUTATION(\r\n    $name: String!\r\n    $email: String!\r\n    $password: String!\r\n    $phoneNumber: Int!\r\n  ) {\r\n    createUser(\r\n      data: {\r\n        name: $name\r\n        email: $email\r\n        password: $password\r\n        phoneNumber: $phoneNumber\r\n      }\r\n    ) {\r\n      id\r\n      name\r\n      email\r\n      phoneNumber\r\n    }\r\n  }\r\n`;\r\n\r\nexport default function CreateUser() {\r\n  const { inputs, handleChange, clearForm, resetForm } = useForm({});\r\n\r\n  console.log(inputs);\r\n\r\n  const [createUser, { loading, error, data }] = useMutation(\r\n    CREATE_USER_MUTATION,\r\n    {\r\n      variables: inputs,\r\n      refetchQueries: [{ query: ALL_USERS_QUERY }],\r\n    }\r\n  );\r\n  return (\r\n    <form\r\n      onSubmit={async (e) => {\r\n        e.preventDefault();\r\n        const res = await createUser();\r\n        clearForm();\r\n        Router.push({ pathname: `/user/${res.data.createUser.id}` });\r\n      }}\r\n    >\r\n      <fieldset>\r\n        <label htmlFor=\"name\">\r\n          Name\r\n          <input\r\n            required\r\n            type=\"text\"\r\n            id=\"name\"\r\n            placeholder=\"Name\"\r\n            value={inputs.name}\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n        <label htmlFor=\"email\">\r\n          Email{\" \"}\r\n          <input\r\n            required\r\n            type=\"email\"\r\n            placeholder=\"Email address\"\r\n            value={inputs.email}\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n        <label htmlFor=\"password\">\r\n          Password{\" \"}\r\n          <input\r\n            required\r\n            type=\"password\"\r\n            placeholder=\"password\"\r\n            value={inputs.password}\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n        <label htmlFor=\"phoneNumber\">\r\n          Phone Number{\" \"}\r\n          <input\r\n            type=\"phoneNumber\"\r\n            placeholder=\"phone number\"\r\n            value={inputs.phoneNumber}\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n        <button type=\"submit\">Add User</button>\r\n      </fieldset>\r\n    </form>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}