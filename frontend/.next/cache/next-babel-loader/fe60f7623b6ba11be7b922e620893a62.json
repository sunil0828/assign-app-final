{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\SunilL\\\\Downloads\\\\assign-app\\\\frontend\\\\pages\\\\users.js\";\nimport { useQuery } from \"@apollo/client\";\nimport gql from \"graphql-tag\";\nconst ALL_USERS_QUERY = gql`\n  query ALL_USERS_QUERY {\n    allUsers {\n      id\n      name\n      email\n      password_is_set\n    }\n  }\n`;\nexport default function UsersPage() {\n  const {\n    data,\n    error,\n    loading\n  } = useQuery(ALL_USERS_QUERY);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Error : \", error.message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: data.allUsers.map(user => /*#__PURE__*/_jsxDEV(\"p\", {\n        user: user\n      }, user.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["C:/Users/SunilL/Downloads/assign-app/frontend/pages/users.js"],"names":["useQuery","gql","ALL_USERS_QUERY","UsersPage","data","error","loading","message","allUsers","map","user","id"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,gBAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AAEA,MAAMC,eAAe,GAAGD,GAAI;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CATA;AAUA,eAAe,SAASE,SAAT,GAAqB;AAClC,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA;AAAf,MAA2BN,QAAQ,CAACE,eAAD,CAAzC;AACA,MAAII,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACb,MAAID,KAAJ,EAAW,oBAAO;AAAA,2BAAYA,KAAK,CAACE,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACX,sBACE;AAAA,2BACE;AAAA,gBACGH,IAAI,CAACI,QAAL,CAAcC,GAAd,CAAmBC,IAAD,iBACjB;AAAiB,QAAA,IAAI,EAAEA;AAAvB,SAAQA,IAAI,CAACC,EAAb;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AASD","sourcesContent":["import { useQuery } from \"@apollo/client\";\r\nimport gql from \"graphql-tag\";\r\n\r\nconst ALL_USERS_QUERY = gql`\r\n  query ALL_USERS_QUERY {\r\n    allUsers {\r\n      id\r\n      name\r\n      email\r\n      password_is_set\r\n    }\r\n  }\r\n`;\r\nexport default function UsersPage() {\r\n  const { data, error, loading } = useQuery(ALL_USERS_QUERY);\r\n  if (loading) return <p>Loading...</p>;\r\n  if (error) return <p>Error : {error.message}</p>;\r\n  return (\r\n    <div>\r\n      <div>\r\n        {data.allUsers.map((user) => (\r\n          <p key={user.id} user={user} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}