{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\SunilL\\\\Downloads\\\\assign-app\\\\frontend\\\\components\\\\CreateUser.js\";\nimport { useMutation } from \"@apollo/client\";\nimport Router from \"next/router\";\nimport useForm from \"../lib/useForm\";\nimport { SIGNUP_MUTATION } from \"./SignUp\"; // const CREATE_USER_MUTATION = gql`\n//   mutation CREATE_USER_MUTATION(\n//     $name: String!\n//     $email: String!\n//     $password: String!\n//     $phoneNumber: Int!\n//   ) {\n//     createUser(\n//       data: {\n//         name: $name\n//         email: $email\n//         password: $password\n//         phoneNumber: $phoneNumber\n//       }\n//     ) {\n//       id\n//       name\n//       email\n//       phoneNumber\n//     }\n//   }\n// `;\n\nexport default function CreateUser() {\n  const {\n    inputs,\n    handleChange,\n    resetForm\n  } = useForm({\n    email: \"\",\n    name: \"\",\n    password: \"\"\n  });\n  const [signup, {\n    data,\n    loading,\n    error\n  }] = useMutation(SIGNUP_MUTATION, {\n    variables: inputs // refectch the currently logged in user\n    // refetchQueries: [{ query: CURRENT_USER_QUERY }],\n\n  });\n\n  async function handleSubmit(e) {\n    e.preventDefault(); // stop the form from submitting\n\n    console.log(inputs);\n    const res = await signup().catch(console.error);\n    console.log(res); // Router.push({ pathname: `/user/${res.data.createUser.id}` });\n\n    console.log({\n      data,\n      loading,\n      error\n    });\n    resetForm(); // Send the email and password to the graphqlAPI\n    // {\n    //   async (e) => {\n    //     e.preventDefault();\n    //     const res = await createUser();\n    //     clearForm();\n\n    Router.push({\n      pathname: `/user/${res.data.createUser}`\n    }); //   };\n    // }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    method: \"POST\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add user account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      error: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      children: [(data === null || data === void 0 ? void 0 : data.createUser) && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"User added with \", data.createUser.email, \"...!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 30\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: [\"Your Name\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          placeholder: \"Your Name\",\n          autoComplete: \"name\",\n          value: inputs.name,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: [\"Email\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          placeholder: \"Your Email Address\",\n          autoComplete: \"email\",\n          value: inputs.email,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: [\"Password\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          placeholder: \"Password\",\n          autoComplete: \"password\",\n          value: inputs.password,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n} // export default function CreateUser() {\n//   const { inputs, handleChange, clearForm, resetForm } = useForm({});\n//   console.log(inputs);\n//   const [createUser, { loading, error, data }] = useMutation(\n//     CREATE_USER_MUTATION,\n//     {\n//       variables: inputs,\n//       refetchQueries: [{ query: ALL_USERS_QUERY }],\n//     }\n//   );\n//   return (\n//     <form\n//       onSubmit={async (e) => {\n//         e.preventDefault();\n//         const res = await createUser();\n//         clearForm();\n//         Router.push({ pathname: `/user/${res.data.createUser.id}` });\n//       }}\n//     >\n//       <fieldset>\n//         <label htmlFor=\"name\">\n//           Name\n//           <input\n//             required\n//             type=\"text\"\n//             id=\"name\"\n//             placeholder=\"Name\"\n//             value={inputs.name}\n//             onChange={handleChange}\n//           />\n//         </label>\n//         <label htmlFor=\"email\">\n//           Email{\" \"}\n//           <input\n//             required\n//             type=\"email\"\n//             placeholder=\"Email address\"\n//             value={inputs.email}\n//             onChange={handleChange}\n//           />\n//         </label>\n//         <label htmlFor=\"password\">\n//           Password{\" \"}\n//           <input\n//             required\n//             type=\"password\"\n//             placeholder=\"password\"\n//             value={inputs.password}\n//             onChange={handleChange}\n//           />\n//         </label>\n//         <label htmlFor=\"phoneNumber\">\n//           Phone Number{\" \"}\n//           <input\n//             type=\"phoneNumber\"\n//             placeholder=\"phone number\"\n//             value={inputs.phoneNumber}\n//             onChange={handleChange}\n//           />\n//         </label>\n//         <button type=\"submit\">Add User</button>\n//       </fieldset>\n//     </form>\n//   );\n// }","map":{"version":3,"sources":["C:/Users/SunilL/Downloads/assign-app/frontend/components/CreateUser.js"],"names":["useMutation","Router","useForm","SIGNUP_MUTATION","CreateUser","inputs","handleChange","resetForm","email","name","password","signup","data","loading","error","variables","handleSubmit","e","preventDefault","console","log","res","catch","push","pathname","createUser"],"mappings":"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","sourcesContent":["import { useMutation } from \"@apollo/client\";\r\nimport Router from \"next/router\";\r\nimport useForm from \"../lib/useForm\";\r\nimport { SIGNUP_MUTATION } from \"./SignUp\";\r\n\r\n// const CREATE_USER_MUTATION = gql`\r\n//   mutation CREATE_USER_MUTATION(\r\n//     $name: String!\r\n//     $email: String!\r\n//     $password: String!\r\n//     $phoneNumber: Int!\r\n//   ) {\r\n//     createUser(\r\n//       data: {\r\n//         name: $name\r\n//         email: $email\r\n//         password: $password\r\n//         phoneNumber: $phoneNumber\r\n//       }\r\n//     ) {\r\n//       id\r\n//       name\r\n//       email\r\n//       phoneNumber\r\n//     }\r\n//   }\r\n// `;\r\n\r\nexport default function CreateUser() {\r\n  const { inputs, handleChange, resetForm } = useForm({\r\n    email: \"\",\r\n    name: \"\",\r\n    password: \"\",\r\n  });\r\n  const [signup, { data, loading, error }] = useMutation(SIGNUP_MUTATION, {\r\n    variables: inputs,\r\n    // refectch the currently logged in user\r\n    // refetchQueries: [{ query: CURRENT_USER_QUERY }],\r\n  });\r\n  async function handleSubmit(e) {\r\n    e.preventDefault(); // stop the form from submitting\r\n    console.log(inputs);\r\n    const res = await signup().catch(console.error);\r\n    console.log(res);\r\n    // Router.push({ pathname: `/user/${res.data.createUser.id}` });\r\n    console.log({ data, loading, error });\r\n    resetForm();\r\n    // Send the email and password to the graphqlAPI\r\n\r\n    // {\r\n    //   async (e) => {\r\n    //     e.preventDefault();\r\n    //     const res = await createUser();\r\n    //     clearForm();\r\n    Router.push({ pathname: `/user/${res.data.createUser}` });\r\n    //   };\r\n    // }\r\n  }\r\n  return (\r\n    <form method=\"POST\" onSubmit={handleSubmit}>\r\n      <h2>Add user account</h2>\r\n      <p error={error} />\r\n      <fieldset>\r\n        {data?.createUser && <p>User added with {data.createUser.email}...!</p>}\r\n        <label htmlFor=\"email\">\r\n          Your Name\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            placeholder=\"Your Name\"\r\n            autoComplete=\"name\"\r\n            value={inputs.name}\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n        <label htmlFor=\"email\">\r\n          Email\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            placeholder=\"Your Email Address\"\r\n            autoComplete=\"email\"\r\n            value={inputs.email}\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n        <label htmlFor=\"password\">\r\n          Password\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            placeholder=\"Password\"\r\n            autoComplete=\"password\"\r\n            value={inputs.password}\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n        <button type=\"submit\">Add User</button>\r\n      </fieldset>\r\n    </form>\r\n  );\r\n}\r\n\r\n// export default function CreateUser() {\r\n//   const { inputs, handleChange, clearForm, resetForm } = useForm({});\r\n\r\n//   console.log(inputs);\r\n\r\n//   const [createUser, { loading, error, data }] = useMutation(\r\n//     CREATE_USER_MUTATION,\r\n//     {\r\n//       variables: inputs,\r\n//       refetchQueries: [{ query: ALL_USERS_QUERY }],\r\n//     }\r\n//   );\r\n//   return (\r\n//     <form\r\n//       onSubmit={async (e) => {\r\n//         e.preventDefault();\r\n//         const res = await createUser();\r\n//         clearForm();\r\n//         Router.push({ pathname: `/user/${res.data.createUser.id}` });\r\n//       }}\r\n//     >\r\n//       <fieldset>\r\n//         <label htmlFor=\"name\">\r\n//           Name\r\n//           <input\r\n//             required\r\n//             type=\"text\"\r\n//             id=\"name\"\r\n//             placeholder=\"Name\"\r\n//             value={inputs.name}\r\n//             onChange={handleChange}\r\n//           />\r\n//         </label>\r\n//         <label htmlFor=\"email\">\r\n//           Email{\" \"}\r\n//           <input\r\n//             required\r\n//             type=\"email\"\r\n//             placeholder=\"Email address\"\r\n//             value={inputs.email}\r\n//             onChange={handleChange}\r\n//           />\r\n//         </label>\r\n//         <label htmlFor=\"password\">\r\n//           Password{\" \"}\r\n//           <input\r\n//             required\r\n//             type=\"password\"\r\n//             placeholder=\"password\"\r\n//             value={inputs.password}\r\n//             onChange={handleChange}\r\n//           />\r\n//         </label>\r\n//         <label htmlFor=\"phoneNumber\">\r\n//           Phone Number{\" \"}\r\n//           <input\r\n//             type=\"phoneNumber\"\r\n//             placeholder=\"phone number\"\r\n//             value={inputs.phoneNumber}\r\n//             onChange={handleChange}\r\n//           />\r\n//         </label>\r\n//         <button type=\"submit\">Add User</button>\r\n//       </fieldset>\r\n//     </form>\r\n//   );\r\n// }\r\n"]},"metadata":{},"sourceType":"module"}