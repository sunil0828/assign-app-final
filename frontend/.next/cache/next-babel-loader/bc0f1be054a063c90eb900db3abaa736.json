{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport gql from \"graphql-tag\";\nimport useForm from \"../lib/useForm\";\nconst SINGLE_USER_QUERY = gql`\n  query SINGLE_USER_QUERY($id: ID!) {\n    User(where: { id: $id }) {\n      id\n      name\n      email\n      phoneNumber\n    }\n  }\n`;\nconst UPDATE_USER_MUTATION = gql`\n  mutation UPDATE_USER_MUTATION($id: ID!, $name: String, $phoneNumber: Int) {\n    updateUser(id: $id, data: { name: $name, phoneNumber: $phoneNumber }) {\n      id\n      name\n      phoneNumber\n    }\n  }\n`;\nexport default function UpdateUser({\n  id\n}) {\n  const {\n    data\n  } = useQuery(SINGLE_USER_QUERY, {\n    variables: {\n      id\n    }\n  });\n  console.log(data);\n  const [updateUser, {\n    data: updateData\n  }] = useMutation(UPDATE_USER_MUTATION);\n  console.log(data);\n  const {\n    inputs,\n    handleChange,\n    clearForm,\n    resetForm\n  } = useForm((data === null || data === void 0 ? void 0 : data.User) || {\n    name: \"\",\n    phoneNumber: \"\"\n  });\n  console.log(inputs);\n  return /*#__PURE__*/_jsx(\"form\", {\n    onSubmit: async e => {\n      e.preventDefault();\n      const res = await updateUser({\n        variables: {\n          id,\n          name: inputs.name,\n          phoneNumber: inputs.phoneNumber\n        }\n      }).catch(console.error);\n      console.log(res);\n    },\n    children: /*#__PURE__*/_jsxs(\"fieldset\", {\n      children: [/*#__PURE__*/_jsxs(\"label\", {\n        htmlFor: \"name\",\n        children: [\"Name\", /*#__PURE__*/_jsx(\"input\", {\n          required: true,\n          type: \"text\",\n          id: \"name\",\n          placeholder: \"Name\",\n          value: inputs.name,\n          onChange: handleChange\n        })]\n      }), /*#__PURE__*/_jsxs(\"label\", {\n        htmlFor: \"phoneNumber\",\n        children: [\"Phone Number\", /*#__PURE__*/_jsx(\"input\", {\n          type: \"number\",\n          placeholder: \"phone number\",\n          value: inputs.phoneNumber,\n          onChange: handleChange\n        })]\n      }), /*#__PURE__*/_jsx(\"button\", {\n        type: \"submit\",\n        children: \"Update User\"\n      })]\n    })\n  });\n}","map":null,"metadata":{},"sourceType":"module"}