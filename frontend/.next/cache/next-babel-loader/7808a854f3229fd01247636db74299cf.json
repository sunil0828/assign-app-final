{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\SunilL\\\\Downloads\\\\assign-app\\\\frontend\\\\components\\\\UpdateUser.js\",\n    _s = $RefreshSig$();\n\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport gql from \"graphql-tag\";\nimport useForm from \"../lib/useForm\";\nimport { SINGLE_USER_QUERY } from \"./SingleUser\"; // const UPDATE_USER_MUTATION = gql`\n//   mutation UPDATE_USER_MUTATION($id: ID!, $name: String, $phoneNumber: Int) {\n//     updateUser(id: $id, data: { name: $name, phoneNumber: $phoneNumber }) {\n//       id\n//       name\n//       phoneNumber\n//     }\n//   }\n// `;\n\nexport default function UpdateUser(_ref) {\n  _s();\n\n  var id = _ref.id;\n\n  var _useQuery = useQuery(SINGLE_USER_QUERY, {\n    variables: {\n      id: id\n    }\n  }),\n      data = _useQuery.data,\n      error = _useQuery.error,\n      loading = _useQuery.loading; // console.log(data);\n  // const [\n  //   updateUser,\n  //   { data: updateData, error: updateError, loading: updateLoading },\n  // ] = useMutation(UPDATE_USER_MUTATION);\n  // console.log(data);\n  // const { inputs, handleChange, clearForm, resetForm } = useForm(\n  //   data?.User || {\n  //     name: \"\",\n  //     phoneNumber: \"\",\n  //   }\n  // );\n  // console.log(inputs);\n  // if (loading) return <p>Loading...</p>;\n\n\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"update \", id, \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this) // <form\n  //   onSubmit={async (e) => {\n  //     e.preventDefault();\n  //     const res = await updateUser({\n  //       variables: {\n  //         id,\n  //         name: inputs.name,\n  //         phoneNumber: inputs.phoneNumber,\n  //       },\n  //     }).catch(console.error);\n  //     console.log(res);\n  //   }}\n  // >\n  //   <p error={error || updateError} />\n  //   <fieldset>\n  //     <label htmlFor=\"name\">\n  //       Name\n  //       <input\n  //         type=\"text\"\n  //         id=\"name\"\n  //         placeholder=\"Name\"\n  //         value={inputs.name}\n  //         onChange={handleChange}\n  //       />\n  //     </label>\n  //     <label htmlFor=\"phoneNumber\">\n  //       Phone Number\n  //       <input\n  //         type=\"number\"\n  //         id=\"phoneNumber\"\n  //         placeholder=\"phone number\"\n  //         value={inputs.phoneNumber}\n  //         onChange={handleChange}\n  //       />\n  //     </label>\n  //     <button type=\"submit\">Update User</button>\n  //   </fieldset>\n  // </form>\n  ;\n}\n\n_s(UpdateUser, \"eE+cqeCo2lkI//dPlCsO1rICVGU=\", false, function () {\n  return [useQuery];\n});\n\n_c = UpdateUser;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateUser\");","map":{"version":3,"sources":["C:/Users/SunilL/Downloads/assign-app/frontend/components/UpdateUser.js"],"names":["useMutation","useQuery","gql","useForm","SINGLE_USER_QUERY","UpdateUser","id","variables","data","error","loading"],"mappings":";;;;;AAAA,SAASA,WAAT,EAAsBC,QAAtB,QAAsC,gBAAtC;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,OAAP,MAAoB,gBAApB;AACA,SAASC,iBAAT,QAAkC,cAAlC,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,SAASC,UAAT,OAA4B;AAAA;;AAAA,MAANC,EAAM,QAANA,EAAM;;AAAA,kBACRL,QAAQ,CAACG,iBAAD,EAAoB;AAC3DG,IAAAA,SAAS,EAAE;AAAED,MAAAA,EAAE,EAAEA;AAAN;AADgD,GAApB,CADA;AAAA,MACjCE,IADiC,aACjCA,IADiC;AAAA,MAC3BC,KAD2B,aAC3BA,KAD2B;AAAA,MACpBC,OADoB,aACpBA,OADoB,EAIzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,sBACE;AAAA,0BAAWJ,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CAEE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAxCF;AA0CD;;GA5DuBD,U;UACWJ,Q;;;KADXI,U","sourcesContent":["import { useMutation, useQuery } from \"@apollo/client\";\r\nimport gql from \"graphql-tag\";\r\nimport useForm from \"../lib/useForm\";\r\nimport { SINGLE_USER_QUERY } from \"./SingleUser\";\r\n\r\n// const UPDATE_USER_MUTATION = gql`\r\n//   mutation UPDATE_USER_MUTATION($id: ID!, $name: String, $phoneNumber: Int) {\r\n//     updateUser(id: $id, data: { name: $name, phoneNumber: $phoneNumber }) {\r\n//       id\r\n//       name\r\n//       phoneNumber\r\n//     }\r\n//   }\r\n// `;\r\n\r\nexport default function UpdateUser({ id }) {\r\n  const { data, error, loading } = useQuery(SINGLE_USER_QUERY, {\r\n    variables: { id: id },\r\n  });\r\n  // console.log(data);\r\n  // const [\r\n  //   updateUser,\r\n  //   { data: updateData, error: updateError, loading: updateLoading },\r\n  // ] = useMutation(UPDATE_USER_MUTATION);\r\n  // console.log(data);\r\n  // const { inputs, handleChange, clearForm, resetForm } = useForm(\r\n  //   data?.User || {\r\n  //     name: \"\",\r\n  //     phoneNumber: \"\",\r\n  //   }\r\n  // );\r\n  // console.log(inputs);\r\n  // if (loading) return <p>Loading...</p>;\r\n  return (\r\n    <p>update {id} </p>\r\n    // <form\r\n    //   onSubmit={async (e) => {\r\n    //     e.preventDefault();\r\n    //     const res = await updateUser({\r\n    //       variables: {\r\n    //         id,\r\n    //         name: inputs.name,\r\n    //         phoneNumber: inputs.phoneNumber,\r\n    //       },\r\n    //     }).catch(console.error);\r\n    //     console.log(res);\r\n    //   }}\r\n    // >\r\n    //   <p error={error || updateError} />\r\n    //   <fieldset>\r\n    //     <label htmlFor=\"name\">\r\n    //       Name\r\n    //       <input\r\n    //         type=\"text\"\r\n    //         id=\"name\"\r\n    //         placeholder=\"Name\"\r\n    //         value={inputs.name}\r\n    //         onChange={handleChange}\r\n    //       />\r\n    //     </label>\r\n\r\n    //     <label htmlFor=\"phoneNumber\">\r\n    //       Phone Number\r\n    //       <input\r\n    //         type=\"number\"\r\n    //         id=\"phoneNumber\"\r\n    //         placeholder=\"phone number\"\r\n    //         value={inputs.phoneNumber}\r\n    //         onChange={handleChange}\r\n    //       />\r\n    //     </label>\r\n    //     <button type=\"submit\">Update User</button>\r\n    //   </fieldset>\r\n    // </form>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}