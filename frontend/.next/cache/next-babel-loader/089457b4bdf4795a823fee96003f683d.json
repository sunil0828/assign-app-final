{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\SunilL\\\\Downloads\\\\assign-app\\\\frontend\\\\components\\\\UpdateUser.js\";\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport gql from \"graphql-tag\";\nimport useForm from \"../lib/useForm\";\nconst SINGLE_USER_QUERY = gql`\n  query SINGLE_USER_QUERY($id: ID!) {\n    User(where: { id: $id }) {\n      id\n      name\n      email\n      phoneNumber\n    }\n  }\n`;\nconst UPDATE_USER_MUTATION = gql`\n  mutation UPDATE_USER_MUTATION($id: ID!, $name: String, $phoneNumber: Int) {\n    updateUser(id: $id, data: { name: $name, phoneNumber: $phoneNumber }) {\n      id\n      name\n      phoneNumber\n    }\n  }\n`;\nexport default function UpdateUser({\n  id\n}) {\n  const {\n    data\n  } = useQuery(SINGLE_USER_QUERY, {\n    variables: {\n      id\n    }\n  });\n  console.log(data);\n  const [updateUser, {\n    updateData\n  }] = useMutation(UPDATE_USER_MUTATION);\n  console.log(data);\n  const {\n    inputs,\n    handleChange,\n    clearForm,\n    resetForm\n  } = useForm((data === null || data === void 0 ? void 0 : data.User) || {\n    name: \"\",\n    phoneNumber: \"\"\n  });\n  console.log(inputs);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: async e => {\n      e.preventDefault();\n      const res = await updateUser({\n        variables: {\n          id,\n          name: inputs.name,\n          phoneNumber: inputs.phoneNumber\n        }\n      }).catch(console.error);\n      console.log(res);\n    },\n    children: /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: [\"Name\", /*#__PURE__*/_jsxDEV(\"input\", {\n          required: true,\n          type: \"text\",\n          id: \"name\",\n          placeholder: \"Name\",\n          value: inputs.name,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"phoneNumber\",\n        children: [\"Phone Number\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"phoneNumber\",\n          placeholder: \"phone number\",\n          value: inputs.phoneNumber,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Update User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["C:/Users/SunilL/Downloads/assign-app/frontend/components/UpdateUser.js"],"names":["useMutation","useQuery","gql","useForm","SINGLE_USER_QUERY","UPDATE_USER_MUTATION","UpdateUser","id","data","variables","console","log","updateUser","updateData","inputs","handleChange","clearForm","resetForm","User","name","phoneNumber","e","preventDefault","res","catch","error"],"mappings":";;AAAA,SAASA,WAAT,EAAsBC,QAAtB,QAAsC,gBAAtC;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,OAAP,MAAoB,gBAApB;AAEA,MAAMC,iBAAiB,GAAGF,GAAI;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CATA;AAWA,MAAMG,oBAAoB,GAAGH,GAAI;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARA;AAUA,eAAe,SAASI,UAAT,CAAoB;AAAEC,EAAAA;AAAF,CAApB,EAA4B;AACzC,QAAM;AAAEC,IAAAA;AAAF,MAAWP,QAAQ,CAACG,iBAAD,EAAoB;AAC3CK,IAAAA,SAAS,EAAE;AAAEF,MAAAA;AAAF;AADgC,GAApB,CAAzB;AAGAG,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA,QAAM,CAACI,UAAD,EAAa;AAAEC,IAAAA;AAAF,GAAb,IAA+Bb,WAAW,CAACK,oBAAD,CAAhD;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA,QAAM;AAAEM,IAAAA,MAAF;AAAUC,IAAAA,YAAV;AAAwBC,IAAAA,SAAxB;AAAmCC,IAAAA;AAAnC,MAAiDd,OAAO,CAC5D,CAAAK,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEU,IAAN,KAAc;AACZC,IAAAA,IAAI,EAAE,EADM;AAEZC,IAAAA,WAAW,EAAE;AAFD,GAD8C,CAA9D;AAMAV,EAAAA,OAAO,CAACC,GAAR,CAAYG,MAAZ;AACA,sBACE;AACE,IAAA,QAAQ,EAAE,MAAOO,CAAP,IAAa;AACrBA,MAAAA,CAAC,CAACC,cAAF;AACA,YAAMC,GAAG,GAAG,MAAMX,UAAU,CAAC;AAC3BH,QAAAA,SAAS,EAAE;AACTF,UAAAA,EADS;AAETY,UAAAA,IAAI,EAAEL,MAAM,CAACK,IAFJ;AAGTC,UAAAA,WAAW,EAAEN,MAAM,CAACM;AAHX;AADgB,OAAD,CAAV,CAMfI,KANe,CAMTd,OAAO,CAACe,KANC,CAAlB;AAOAf,MAAAA,OAAO,CAACC,GAAR,CAAYY,GAAZ;AACD,KAXH;AAAA,2BAaE;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA,wCAEE;AACE,UAAA,QAAQ,MADV;AAEE,UAAA,IAAI,EAAC,MAFP;AAGE,UAAA,EAAE,EAAC,MAHL;AAIE,UAAA,WAAW,EAAC,MAJd;AAKE,UAAA,KAAK,EAAET,MAAM,CAACK,IALhB;AAME,UAAA,QAAQ,EAAEJ;AANZ;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAaE;AAAO,QAAA,OAAO,EAAC,aAAf;AAAA,gDAEE;AACE,UAAA,IAAI,EAAC,aADP;AAEE,UAAA,WAAW,EAAC,cAFd;AAGE,UAAA,KAAK,EAAED,MAAM,CAACM,WAHhB;AAIE,UAAA,QAAQ,EAAEL;AAJZ;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAbF,eAsBE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAtBF;AAAA;AAAA;AAAA;AAAA;AAAA;AAbF;AAAA;AAAA;AAAA;AAAA,UADF;AAwCD","sourcesContent":["import { useMutation, useQuery } from \"@apollo/client\";\r\nimport gql from \"graphql-tag\";\r\nimport useForm from \"../lib/useForm\";\r\n\r\nconst SINGLE_USER_QUERY = gql`\r\n  query SINGLE_USER_QUERY($id: ID!) {\r\n    User(where: { id: $id }) {\r\n      id\r\n      name\r\n      email\r\n      phoneNumber\r\n    }\r\n  }\r\n`;\r\n\r\nconst UPDATE_USER_MUTATION = gql`\r\n  mutation UPDATE_USER_MUTATION($id: ID!, $name: String, $phoneNumber: Int) {\r\n    updateUser(id: $id, data: { name: $name, phoneNumber: $phoneNumber }) {\r\n      id\r\n      name\r\n      phoneNumber\r\n    }\r\n  }\r\n`;\r\n\r\nexport default function UpdateUser({ id }) {\r\n  const { data } = useQuery(SINGLE_USER_QUERY, {\r\n    variables: { id },\r\n  });\r\n  console.log(data);\r\n  const [updateUser, { updateData }] = useMutation(UPDATE_USER_MUTATION);\r\n  console.log(data);\r\n  const { inputs, handleChange, clearForm, resetForm } = useForm(\r\n    data?.User || {\r\n      name: \"\",\r\n      phoneNumber: \"\",\r\n    }\r\n  );\r\n  console.log(inputs);\r\n  return (\r\n    <form\r\n      onSubmit={async (e) => {\r\n        e.preventDefault();\r\n        const res = await updateUser({\r\n          variables: {\r\n            id,\r\n            name: inputs.name,\r\n            phoneNumber: inputs.phoneNumber,\r\n          },\r\n        }).catch(console.error);\r\n        console.log(res);\r\n      }}\r\n    >\r\n      <fieldset>\r\n        <label htmlFor=\"name\">\r\n          Name\r\n          <input\r\n            required\r\n            type=\"text\"\r\n            id=\"name\"\r\n            placeholder=\"Name\"\r\n            value={inputs.name}\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n\r\n        <label htmlFor=\"phoneNumber\">\r\n          Phone Number\r\n          <input\r\n            type=\"phoneNumber\"\r\n            placeholder=\"phone number\"\r\n            value={inputs.phoneNumber}\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n        <button type=\"submit\">Update User</button>\r\n      </fieldset>\r\n    </form>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}