{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\SunilL\\\\Downloads\\\\assign-app\\\\frontend\\\\components\\\\UpdateUser.js\";\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport gql from \"graphql-tag\";\nimport useForm from \"../lib/useForm\";\nimport ErrorMessage from \"./ErrorMessage\";\nimport { SINGLE_USER_QUERY } from \"./SingleUser\";\nimport Form from \"./styles/Form\";\nconst UPDATE_USER_MUTATION = gql`\n  mutation UPDATE_USER_MUTATION($id: ID!, $name: String, $phoneNumber: Int) {\n    updateUser(id: $id, data: { name: $name, phoneNumber: $phoneNumber }) {\n      id\n      name\n      phoneNumber\n    }\n  }\n`;\nexport default function UpdateUser({\n  id\n}) {\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(SINGLE_USER_QUERY, {\n    variables: {\n      id\n    }\n  });\n  const [updateUser, {\n    data: updateData,\n    error: updateError,\n    loading: updateLoading\n  }] = useMutation(UPDATE_USER_MUTATION);\n  const {\n    inputs,\n    handleChange,\n    resetForm\n  } = useForm(data === null || data === void 0 ? void 0 : data.User);\n  console.log(inputs);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: async e => {\n      e.preventDefault();\n      const res = await updateUser({\n        variables: {\n          id,\n          name: inputs.name,\n          phoneNumber: inputs.phoneNumber\n        }\n      }).catch(console.error);\n      console.log(res);\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add user account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n      error: error || updateError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      children: [(data === null || data === void 0 ? void 0 : data.createUser) && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"User added with \", data.createUser.email, \"...!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 30\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: [\"Name\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          id: \"name\",\n          placeholder: \"User Name\",\n          autoComplete: \"name\",\n          value: inputs.name,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"phoneNumber\",\n        children: [\"Phone Number\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"phoneNumber\",\n          id: \"phoneNumber\",\n          placeholder: \"User phoneNumber\",\n          value: inputs.phoneNumber,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Update User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["C:/Users/SunilL/Downloads/assign-app/frontend/components/UpdateUser.js"],"names":["useMutation","useQuery","gql","useForm","ErrorMessage","SINGLE_USER_QUERY","Form","UPDATE_USER_MUTATION","UpdateUser","id","data","loading","error","variables","updateUser","updateData","updateError","updateLoading","inputs","handleChange","resetForm","User","console","log","e","preventDefault","res","name","phoneNumber","catch","createUser","email"],"mappings":"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","sourcesContent":["import { useMutation, useQuery } from \"@apollo/client\";\r\nimport gql from \"graphql-tag\";\r\nimport useForm from \"../lib/useForm\";\r\nimport ErrorMessage from \"./ErrorMessage\";\r\nimport { SINGLE_USER_QUERY } from \"./SingleUser\";\r\nimport Form from \"./styles/Form\";\r\n\r\nconst UPDATE_USER_MUTATION = gql`\r\n  mutation UPDATE_USER_MUTATION($id: ID!, $name: String, $phoneNumber: Int) {\r\n    updateUser(id: $id, data: { name: $name, phoneNumber: $phoneNumber }) {\r\n      id\r\n      name\r\n      phoneNumber\r\n    }\r\n  }\r\n`;\r\n\r\nexport default function UpdateUser({ id }) {\r\n  const { data, loading, error } = useQuery(SINGLE_USER_QUERY, {\r\n    variables: {\r\n      id,\r\n    },\r\n  });\r\n  const [\r\n    updateUser,\r\n    { data: updateData, error: updateError, loading: updateLoading },\r\n  ] = useMutation(UPDATE_USER_MUTATION);\r\n  const { inputs, handleChange, resetForm } = useForm(data?.User);\r\n  console.log(inputs);\r\n  if (loading) return <p>Loading...</p>;\r\n\r\n  return (\r\n    <Form\r\n      onSubmit={async (e) => {\r\n        e.preventDefault();\r\n        const res = await updateUser({\r\n          variables: {\r\n            id,\r\n            name: inputs.name,\r\n            phoneNumber: inputs.phoneNumber,\r\n          },\r\n        }).catch(console.error);\r\n        console.log(res);\r\n      }}\r\n    >\r\n      <h2>Add user account</h2>\r\n      <ErrorMessage error={error || updateError} />\r\n      <fieldset>\r\n        {data?.createUser && <p>User added with {data.createUser.email}...!</p>}\r\n        <label htmlFor=\"name\">\r\n          Name\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            id=\"name\"\r\n            placeholder=\"User Name\"\r\n            autoComplete=\"name\"\r\n            value={inputs.name}\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n        <label htmlFor=\"phoneNumber\">\r\n          Phone Number\r\n          <input\r\n            type=\"number\"\r\n            name=\"phoneNumber\"\r\n            id=\"phoneNumber\"\r\n            placeholder=\"User phoneNumber\"\r\n            value={inputs.phoneNumber}\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n\r\n        <button type=\"submit\">Update User</button>\r\n      </fieldset>\r\n    </Form>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}