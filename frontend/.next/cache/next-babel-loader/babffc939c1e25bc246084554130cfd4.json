{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/SunilL/Downloads/assign-app/frontend/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/SunilL/Downloads/assign-app/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:/Users/SunilL/Downloads/assign-app/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"C:/Users/SunilL/Downloads/assign-app/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\SunilL\\\\Downloads\\\\assign-app\\\\frontend\\\\components\\\\CreatePerson.js\",\n    _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation CREATE_USER_MUTATION(\\n    $name: String!\\n    $email: String!\\n    $password: String!\\n    $phoneNumber: Int!\\n  ) {\\n    createUser(\\n      data: {\\n        name: $name\\n        email: $email\\n        password: $password\\n        phoneNumber: $phoneNumber\\n      }\\n    ) {\\n      id\\n      name\\n      email\\n      phoneNumber\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { useMutation } from \"@apollo/client\";\nimport gql from \"graphql-tag\";\nimport { Router } from \"next/dist/client/router\";\nimport useForm from \"../lib/useForm\";\nimport { ALL_USERS_QUERY } from \"./Persons\";\nvar CREATE_USER_MUTATION = gql(_templateObject());\nexport default function CreatePerson() {\n  _s();\n\n  var _useForm = useForm({}),\n      inputs = _useForm.inputs,\n      handleChange = _useForm.handleChange,\n      clearForm = _useForm.clearForm,\n      resetForm = _useForm.resetForm;\n\n  console.log(inputs);\n\n  var _useMutation = useMutation(CREATE_USER_MUTATION, {\n    variables: inputs,\n    refetchQueries: [{\n      query: ALL_USERS_QUERY\n    }]\n  }),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      createUser = _useMutation2[0],\n      _useMutation2$ = _useMutation2[1],\n      loading = _useMutation2$.loading,\n      error = _useMutation2$.error,\n      data = _useMutation2$.data;\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                e.preventDefault();\n                _context.next = 3;\n                return createUser();\n\n              case 3:\n                res = _context.sent;\n                clearForm();\n                Router.push({\n                  pathname: \"/person/\".concat(res.data.createUser.id)\n                });\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }(),\n    children: /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: [\"Name\", /*#__PURE__*/_jsxDEV(\"input\", {\n          required: true,\n          type: \"text\",\n          id: \"name\",\n          placeholder: \"Name\",\n          value: inputs.name,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: [\"Email\", \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n          required: true,\n          type: \"email\",\n          placeholder: \"Email address\",\n          value: inputs.email,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"phoneNumber\",\n        children: [\"Phone Number\", \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"phoneNumber\",\n          placeholder: \"phone number\",\n          value: inputs.phoneNumber,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CreatePerson, \"zhxUPL5t2uD+5pn59Ne3Ay7aUJU=\", false, function () {\n  return [useForm, useMutation];\n});\n\n_c = CreatePerson;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreatePerson\");","map":{"version":3,"sources":["C:/Users/SunilL/Downloads/assign-app/frontend/components/CreatePerson.js"],"names":["useMutation","gql","Router","useForm","ALL_USERS_QUERY","CREATE_USER_MUTATION","CreatePerson","inputs","handleChange","clearForm","resetForm","console","log","variables","refetchQueries","query","createUser","loading","error","data","e","preventDefault","res","push","pathname","id","name","email","phoneNumber"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,SAASA,WAAT,QAA4B,gBAA5B;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,MAAT,QAAuB,yBAAvB;AACA,OAAOC,OAAP,MAAoB,gBAApB;AACA,SAASC,eAAT,QAAgC,WAAhC;AAEA,IAAMC,oBAAoB,GAAGJ,GAAH,mBAA1B;AAuBA,eAAe,SAASK,YAAT,GAAwB;AAAA;;AAAA,iBACkBH,OAAO,CAAC,EAAD,CADzB;AAAA,MAC7BI,MAD6B,YAC7BA,MAD6B;AAAA,MACrBC,YADqB,YACrBA,YADqB;AAAA,MACPC,SADO,YACPA,SADO;AAAA,MACIC,SADJ,YACIA,SADJ;;AAGrCC,EAAAA,OAAO,CAACC,GAAR,CAAYL,MAAZ;;AAHqC,qBAKUP,WAAW,CACxDK,oBADwD,EAExD;AACEQ,IAAAA,SAAS,EAAEN,MADb;AAEEO,IAAAA,cAAc,EAAE,CAAC;AAAEC,MAAAA,KAAK,EAAEX;AAAT,KAAD;AAFlB,GAFwD,CALrB;AAAA;AAAA,MAK9BY,UAL8B;AAAA;AAAA,MAKhBC,OALgB,kBAKhBA,OALgB;AAAA,MAKPC,KALO,kBAKPA,KALO;AAAA,MAKAC,IALA,kBAKAA,IALA;;AAYrC,sBACE;AACE,IAAA,QAAQ;AAAA,0EAAE,iBAAOC,CAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACRA,gBAAAA,CAAC,CAACC,cAAF;AADQ;AAAA,uBAEUL,UAAU,EAFpB;;AAAA;AAEFM,gBAAAA,GAFE;AAGRb,gBAAAA,SAAS;AACTP,gBAAAA,MAAM,CAACqB,IAAP,CAAY;AAAEC,kBAAAA,QAAQ,oBAAaF,GAAG,CAACH,IAAJ,CAASH,UAAT,CAAoBS,EAAjC;AAAV,iBAAZ;;AAJQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAF;;AAAA;AAAA;AAAA;AAAA,OADV;AAAA,2BAQE;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA,wCAEE;AACE,UAAA,QAAQ,MADV;AAEE,UAAA,IAAI,EAAC,MAFP;AAGE,UAAA,EAAE,EAAC,MAHL;AAIE,UAAA,WAAW,EAAC,MAJd;AAKE,UAAA,KAAK,EAAElB,MAAM,CAACmB,IALhB;AAME,UAAA,QAAQ,EAAElB;AANZ;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAYE;AAAO,QAAA,OAAO,EAAC,OAAf;AAAA,4BACQ,GADR,eAEE;AACE,UAAA,QAAQ,MADV;AAEE,UAAA,IAAI,EAAC,OAFP;AAGE,UAAA,WAAW,EAAC,eAHd;AAIE,UAAA,KAAK,EAAED,MAAM,CAACoB,KAJhB;AAKE,UAAA,QAAQ,EAAEnB;AALZ;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAZF,eAsBE;AAAO,QAAA,OAAO,EAAC,aAAf;AAAA,mCACe,GADf,eAEE;AACE,UAAA,IAAI,EAAC,aADP;AAEE,UAAA,WAAW,EAAC,cAFd;AAGE,UAAA,KAAK,EAAED,MAAM,CAACqB,WAHhB;AAIE,UAAA,QAAQ,EAAEpB;AAJZ;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAtBF,eA+BE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA/BF;AAAA;AAAA;AAAA;AAAA;AAAA;AARF;AAAA;AAAA;AAAA;AAAA,UADF;AA4CD;;GAxDuBF,Y;UACiCH,O,EAIRH,W;;;KALzBM,Y","sourcesContent":["import { useMutation } from \"@apollo/client\";\r\nimport gql from \"graphql-tag\";\r\nimport { Router } from \"next/dist/client/router\";\r\nimport useForm from \"../lib/useForm\";\r\nimport { ALL_USERS_QUERY } from \"./Persons\";\r\n\r\nconst CREATE_USER_MUTATION = gql`\r\n  mutation CREATE_USER_MUTATION(\r\n    $name: String!\r\n    $email: String!\r\n    $password: String!\r\n    $phoneNumber: Int!\r\n  ) {\r\n    createUser(\r\n      data: {\r\n        name: $name\r\n        email: $email\r\n        password: $password\r\n        phoneNumber: $phoneNumber\r\n      }\r\n    ) {\r\n      id\r\n      name\r\n      email\r\n      phoneNumber\r\n    }\r\n  }\r\n`;\r\n\r\nexport default function CreatePerson() {\r\n  const { inputs, handleChange, clearForm, resetForm } = useForm({});\r\n\r\n  console.log(inputs);\r\n\r\n  const [createUser, { loading, error, data }] = useMutation(\r\n    CREATE_USER_MUTATION,\r\n    {\r\n      variables: inputs,\r\n      refetchQueries: [{ query: ALL_USERS_QUERY }],\r\n    }\r\n  );\r\n  return (\r\n    <form\r\n      onSubmit={async (e) => {\r\n        e.preventDefault();\r\n        const res = await createUser();\r\n        clearForm();\r\n        Router.push({ pathname: `/person/${res.data.createUser.id}` });\r\n      }}\r\n    >\r\n      <fieldset>\r\n        <label htmlFor=\"name\">\r\n          Name\r\n          <input\r\n            required\r\n            type=\"text\"\r\n            id=\"name\"\r\n            placeholder=\"Name\"\r\n            value={inputs.name}\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n        <label htmlFor=\"email\">\r\n          Email{\" \"}\r\n          <input\r\n            required\r\n            type=\"email\"\r\n            placeholder=\"Email address\"\r\n            value={inputs.email}\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n        <label htmlFor=\"phoneNumber\">\r\n          Phone Number{\" \"}\r\n          <input\r\n            type=\"phoneNumber\"\r\n            placeholder=\"phone number\"\r\n            value={inputs.phoneNumber}\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n        <button type=\"submit\">Add User</button>\r\n      </fieldset>\r\n    </form>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}