{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\SunilL\\\\Downloads\\\\assign-app\\\\frontend\\\\components\\\\Pagination.js\";\nimport { useQuery } from \"@apollo/client\";\nimport gql from \"graphql-tag\";\nimport Link from \"next/link\";\nimport { perPage } from \"../config\";\nimport PaginationStyles from \"./styles/PaginationStyles\";\nexport const PAGINATION_QUERY = gql`\n  query PAGINATION_QUERY {\n    _allUsersMeta {\n      count\n    }\n  }\n`;\nexport default function Pagination({\n  page\n}) {\n  const {\n    data,\n    error,\n    loading\n  } = useQuery(PAGINATION_QUERY);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    error: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 21\n  }, this);\n  const {\n    count\n  } = data._allUsersMeta;\n  const pageCount = Math.ceil(count / perPage);\n  return /*#__PURE__*/_jsxDEV(PaginationStyles, {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      href: `/users/${page - 1}`,\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        \"aria-disabled\": page <= 1,\n        children: \" \\u2B05 \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [page, \" - \", pageCount, \" of \", pageCount]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      href: `/users/${page + 1}`,\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        \"aria-disabled\": page >= pageCount,\n        children: \" \\u27A1 \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["C:/Users/SunilL/Downloads/assign-app/frontend/components/Pagination.js"],"names":["useQuery","gql","Link","perPage","PaginationStyles","PAGINATION_QUERY","Pagination","page","data","error","loading","count","_allUsersMeta","pageCount","Math","ceil"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,gBAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,OAAOC,gBAAP,MAA6B,2BAA7B;AAEA,OAAO,MAAMC,gBAAgB,GAAGJ,GAAI;AACpC;AACA;AACA;AACA;AACA;AACA,CANO;AAQP,eAAe,SAASK,UAAT,CAAoB;AAAEC,EAAAA;AAAF,CAApB,EAA8B;AAC3C,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA;AAAf,MAA2BV,QAAQ,CAACK,gBAAD,CAAzC;AAEA,MAAIK,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACb,MAAID,KAAJ,EAAW,oBAAO;AAAG,IAAA,KAAK,EAAEA;AAAV;AAAA;AAAA;AAAA;AAAA,UAAP;AACX,QAAM;AAAEE,IAAAA;AAAF,MAAYH,IAAI,CAACI,aAAvB;AACA,QAAMC,SAAS,GAAGC,IAAI,CAACC,IAAL,CAAUJ,KAAK,GAAGR,OAAlB,CAAlB;AACA,sBACE,QAAC,gBAAD;AAAA,4BACE,QAAC,IAAD;AAAM,MAAA,IAAI,EAAG,UAASI,IAAI,GAAG,CAAE,EAA/B;AAAA,6BACE;AAAG,yBAAeA,IAAI,IAAI,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAA,iBACGA,IADH,SACYM,SADZ,UAC2BA,SAD3B;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAOE,QAAC,IAAD;AAAM,MAAA,IAAI,EAAG,UAASN,IAAI,GAAG,CAAE,EAA/B;AAAA,6BACE;AAAG,yBAAeA,IAAI,IAAIM,SAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD","sourcesContent":["import { useQuery } from \"@apollo/client\";\r\nimport gql from \"graphql-tag\";\r\nimport Link from \"next/link\";\r\nimport { perPage } from \"../config\";\r\nimport PaginationStyles from \"./styles/PaginationStyles\";\r\n\r\nexport const PAGINATION_QUERY = gql`\r\n  query PAGINATION_QUERY {\r\n    _allUsersMeta {\r\n      count\r\n    }\r\n  }\r\n`;\r\n\r\nexport default function Pagination({ page }) {\r\n  const { data, error, loading } = useQuery(PAGINATION_QUERY);\r\n\r\n  if (loading) return <p>Loading...</p>;\r\n  if (error) return <p error={error} />;\r\n  const { count } = data._allUsersMeta;\r\n  const pageCount = Math.ceil(count / perPage);\r\n  return (\r\n    <PaginationStyles>\r\n      <Link href={`/users/${page - 1}`}>\r\n        <a aria-disabled={page <= 1}> ⬅ </a>\r\n      </Link>\r\n      <p>\r\n        {page} - {pageCount} of {pageCount}\r\n      </p>\r\n      <Link href={`/users/${page + 1}`}>\r\n        <a aria-disabled={page >= pageCount}> ➡ </a>\r\n      </Link>\r\n    </PaginationStyles>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}