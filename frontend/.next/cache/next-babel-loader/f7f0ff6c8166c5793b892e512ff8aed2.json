{"ast":null,"code":"import _taggedTemplateLiteral from \"C:/Users/SunilL/Downloads/assign-app/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\SunilL\\\\Downloads\\\\assign-app\\\\frontend\\\\components\\\\SingleUser.js\",\n    _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query SINGLE_USER_QUERY($id: ID!) {\\n    User(where: { id: $id }) {\\n      id\\n      name\\n      email\\n      phoneNumber\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { useQuery } from \"@apollo/client\";\nimport gql from \"graphql-tag\";\nimport ErrorMessage from \"./ErrorMessage\";\nvar SINGLE_USER_QUERY = gql(_templateObject());\nexport default function SingleUser(_ref) {\n  _s();\n\n  var id = _ref.id;\n  console.log(id);\n\n  var _useQuery = useQuery(SINGLE_USER_QUERY, {\n    variables: {\n      id: id\n    }\n  }),\n      data = _useQuery.data,\n      error = _useQuery.error,\n      loading = _useQuery.loading;\n\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(ErrorMessage, {\n    error: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 21\n  }, this);\n  var User = data.User;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Name: \", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: User.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: User.email\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SingleUser, \"eE+cqeCo2lkI//dPlCsO1rICVGU=\", false, function () {\n  return [useQuery];\n});\n\n_c = SingleUser;\nexport { SINGLE_USER_QUERY };\n\nvar _c;\n\n$RefreshReg$(_c, \"SingleUser\");","map":{"version":3,"sources":["C:/Users/SunilL/Downloads/assign-app/frontend/components/SingleUser.js"],"names":["useQuery","gql","ErrorMessage","SINGLE_USER_QUERY","SingleUser","id","console","log","variables","data","error","loading","User","name","email"],"mappings":";;;;;;;;;;;;;;;;AAAA,SAASA,QAAT,QAAyB,gBAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AAEA,IAAMC,iBAAiB,GAAGF,GAAH,mBAAvB;AAWA,eAAe,SAASG,UAAT,OAA4B;AAAA;;AAAA,MAANC,EAAM,QAANA,EAAM;AACzCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,EAAZ;;AADyC,kBAERL,QAAQ,CAACG,iBAAD,EAAoB;AAC3DK,IAAAA,SAAS,EAAE;AACTH,MAAAA,EAAE,EAAFA;AADS;AADgD,GAApB,CAFA;AAAA,MAEjCI,IAFiC,aAEjCA,IAFiC;AAAA,MAE3BC,KAF2B,aAE3BA,KAF2B;AAAA,MAEpBC,OAFoB,aAEpBA,OAFoB;;AAOzC,MAAIA,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACb,MAAID,KAAJ,EAAW,oBAAO,QAAC,YAAD;AAAc,IAAA,KAAK,EAAEA;AAArB;AAAA;AAAA;AAAA;AAAA,UAAP;AAR8B,MASjCE,IATiC,GASxBH,IATwB,CASjCG,IATiC;AAUzC,sBACE;AAAA,4BACE;AAAA,wCACQ;AAAA,kBAAOA,IAAI,CAACC;AAAZ;AAAA;AAAA;AAAA;AAAA,cADR;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAA,gBAAID,IAAI,CAACE;AAAT;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;GAlBuBV,U;UAEWJ,Q;;;KAFXI,U;AAoBxB,SAASD,iBAAT","sourcesContent":["import { useQuery } from \"@apollo/client\";\r\nimport gql from \"graphql-tag\";\r\nimport ErrorMessage from \"./ErrorMessage\";\r\n\r\nconst SINGLE_USER_QUERY = gql`\r\n  query SINGLE_USER_QUERY($id: ID!) {\r\n    User(where: { id: $id }) {\r\n      id\r\n      name\r\n      email\r\n      phoneNumber\r\n    }\r\n  }\r\n`;\r\n\r\nexport default function SingleUser({ id }) {\r\n  console.log(id);\r\n  const { data, error, loading } = useQuery(SINGLE_USER_QUERY, {\r\n    variables: {\r\n      id,\r\n    },\r\n  });\r\n  if (loading) return <p>Loading...</p>;\r\n  if (error) return <ErrorMessage error={error} />;\r\n  const { User } = data;\r\n  return (\r\n    <div>\r\n      <h2>\r\n        Name: <span>{User.name}</span>\r\n      </h2>\r\n      <p>{User.email}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport { SINGLE_USER_QUERY };\r\n"]},"metadata":{},"sourceType":"module"}