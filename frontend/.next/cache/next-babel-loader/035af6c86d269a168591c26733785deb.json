{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\SunilL\\\\Downloads\\\\assign-app\\\\frontend\\\\components\\\\SingleUser.js\";\nimport { useQuery } from \"@apollo/client\";\nimport gql from \"graphql-tag\";\nimport ErrorMessage from \"./ErrorMessage\";\nconst SINGLE_USER_QUERY = gql`\n  query SINGLE_USER_QUERY($id: ID!) {\n    User(where: { id: $id }) {\n      id\n      name\n      email\n      phoneNumber\n    }\n  }\n`;\nexport default function SingleUser({\n  id\n}) {\n  console.log(id);\n  const {\n    data,\n    error,\n    loading\n  } = useQuery(SINGLE_USER_QUERY, {\n    variables: {\n      id\n    }\n  });\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(ErrorMessage, {\n    error: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 21\n  }, this);\n  const {\n    User\n  } = data;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Name: \", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: User.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Email: \", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: User.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 16\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Contact Number: \", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: User.phoneNumber\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\nexport { SINGLE_USER_QUERY };","map":{"version":3,"sources":["C:/Users/SunilL/Downloads/assign-app/frontend/components/SingleUser.js"],"names":["useQuery","gql","ErrorMessage","SINGLE_USER_QUERY","SingleUser","id","console","log","data","error","loading","variables","User","name","email","phoneNumber"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,gBAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AAEA,MAAMC,iBAAiB,GAAGF,GAAI;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CATA;AAWA,eAAe,SAASG,UAAT,CAAoB;AAAEC,EAAAA;AAAF,CAApB,EAA4B;AACzCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,EAAZ;AACA,QAAM;AAAEG,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA;AAAf,MAA2BV,QAAQ,CAACG,iBAAD,EAAoB;AAC3DQ,IAAAA,SAAS,EAAE;AACTN,MAAAA;AADS;AADgD,GAApB,CAAzC;AAKA,MAAIK,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACb,MAAID,KAAJ,EAAW,oBAAO,QAAC,YAAD;AAAc,IAAA,KAAK,EAAEA;AAArB;AAAA;AAAA;AAAA;AAAA,UAAP;AACX,QAAM;AAAEG,IAAAA;AAAF,MAAWJ,IAAjB;AACA,sBACE;AAAA,4BACE;AAAA,wCACQ;AAAA,kBAAOI,IAAI,CAACC;AAAZ;AAAA;AAAA;AAAA;AAAA,cADR;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAA,yCACS;AAAA,kBAAOD,IAAI,CAACE;AAAZ;AAAA;AAAA;AAAA;AAAA,cADT;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAOE;AAAA,kDACkB;AAAA,kBAAOF,IAAI,CAACG;AAAZ;AAAA;AAAA;AAAA;AAAA,cADlB;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD;AAED,SAASZ,iBAAT","sourcesContent":["import { useQuery } from \"@apollo/client\";\r\nimport gql from \"graphql-tag\";\r\nimport ErrorMessage from \"./ErrorMessage\";\r\n\r\nconst SINGLE_USER_QUERY = gql`\r\n  query SINGLE_USER_QUERY($id: ID!) {\r\n    User(where: { id: $id }) {\r\n      id\r\n      name\r\n      email\r\n      phoneNumber\r\n    }\r\n  }\r\n`;\r\n\r\nexport default function SingleUser({ id }) {\r\n  console.log(id);\r\n  const { data, error, loading } = useQuery(SINGLE_USER_QUERY, {\r\n    variables: {\r\n      id,\r\n    },\r\n  });\r\n  if (loading) return <p>Loading...</p>;\r\n  if (error) return <ErrorMessage error={error} />;\r\n  const { User } = data;\r\n  return (\r\n    <div>\r\n      <h2>\r\n        Name: <span>{User.name}</span>\r\n      </h2>\r\n      <p>\r\n        Email: <span>{User.email}</span>\r\n      </p>\r\n      <p>\r\n        Contact Number: <span>{User.phoneNumber}</span>\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport { SINGLE_USER_QUERY };\r\n"]},"metadata":{},"sourceType":"module"}