{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\SunilL\\\\Downloads\\\\assign-app\\\\frontend\\\\components\\\\Persons.js\";\nimport { useQuery } from \"@apollo/client\";\nimport gql from \"graphql-tag\";\nimport Person from \"./Person\";\nconst ALL_USERS_QUERY = gql`\n  query ALL_USERS_QUERY {\n    allUsers {\n      id\n      name\n      email\n    }\n  }\n`;\nexport default function Persons() {\n  const {\n    data,\n    error,\n    loading\n  } = useQuery(ALL_USERS_QUERY);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Error : \", error.message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 21\n  }, this);\n  console.log(data);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: data.allUsers.map(person => /*#__PURE__*/_jsxDEV(Person, {\n      person: person\n    }, person.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["C:/Users/SunilL/Downloads/assign-app/frontend/components/Persons.js"],"names":["useQuery","gql","Person","ALL_USERS_QUERY","Persons","data","error","loading","message","console","log","allUsers","map","person","id"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,gBAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AAEA,MAAMC,eAAe,GAAGF,GAAI;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARA;AASA,eAAe,SAASG,OAAT,GAAmB;AAChC,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA;AAAf,MAA2BP,QAAQ,CAACG,eAAD,CAAzC;AACA,MAAII,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACb,MAAID,KAAJ,EAAW,oBAAO;AAAA,2BAAYA,KAAK,CAACE,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACXC,EAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ;AACA,sBACE;AAAA,cACGA,IAAI,CAACM,QAAL,CAAcC,GAAd,CAAmBC,MAAD,iBACjB,QAAC,MAAD;AAAwB,MAAA,MAAM,EAAEA;AAAhC,OAAaA,MAAM,CAACC,EAApB;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAOD","sourcesContent":["import { useQuery } from \"@apollo/client\";\r\nimport gql from \"graphql-tag\";\r\nimport Person from \"./Person\";\r\n\r\nconst ALL_USERS_QUERY = gql`\r\n  query ALL_USERS_QUERY {\r\n    allUsers {\r\n      id\r\n      name\r\n      email\r\n    }\r\n  }\r\n`;\r\nexport default function Persons() {\r\n  const { data, error, loading } = useQuery(ALL_USERS_QUERY);\r\n  if (loading) return <p>Loading...</p>;\r\n  if (error) return <p>Error : {error.message}</p>;\r\n  console.log(data);\r\n  return (\r\n    <div>\r\n      {data.allUsers.map((person) => (\r\n        <Person key={person.id} person={person} />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}