{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\SunilL\\\\Downloads\\\\assign-app\\\\frontend\\\\components\\\\DeleteUser.js\";\nimport { useMutation } from \"@apollo/client\";\nimport gql from \"graphql-tag\";\nconst DELETE_USER_MUTATION = gql`\n  mutation DELETE_USER_MUTATION($id: ID!) {\n    deleteUser(id: $id) {\n      id\n      name\n    }\n  }\n`;\n\nfunction update(cache, payload) {\n  console.log(payload);\n  console.log(\"running the update function after delete\");\n  cache.evict(cache.identify(payload.data.deleteUser));\n}\n\nexport default function DeleteUser({\n  id,\n  children\n}) {\n  const [deleteUser, {\n    loading\n  }] = useMutation(DELETE_USER_MUTATION, {\n    variables: {\n      id\n    },\n    update\n  });\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    type: \"button\",\n    disabled: loading,\n    onClick: () => {\n      if (confirm(\"Are you sure, you want to delete this user? \")) {\n        deleteUser().catch(err => alert(err.message));\n      }\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["C:/Users/SunilL/Downloads/assign-app/frontend/components/DeleteUser.js"],"names":["useMutation","gql","DELETE_USER_MUTATION","update","cache","payload","console","log","evict","identify","data","deleteUser","DeleteUser","id","children","loading","variables","confirm","catch","err","alert","message"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,gBAA5B;AACA,OAAOC,GAAP,MAAgB,aAAhB;AAEA,MAAMC,oBAAoB,GAAGD,GAAI;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,CAPA;;AASA,SAASE,MAAT,CAAgBC,KAAhB,EAAuBC,OAAvB,EAAgC;AAC9BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,0CAAZ;AACAH,EAAAA,KAAK,CAACI,KAAN,CAAYJ,KAAK,CAACK,QAAN,CAAeJ,OAAO,CAACK,IAAR,CAAaC,UAA5B,CAAZ;AACD;;AAED,eAAe,SAASC,UAAT,CAAoB;AAAEC,EAAAA,EAAF;AAAMC,EAAAA;AAAN,CAApB,EAAsC;AACnD,QAAM,CAACH,UAAD,EAAa;AAAEI,IAAAA;AAAF,GAAb,IAA4Bf,WAAW,CAACE,oBAAD,EAAuB;AAClEc,IAAAA,SAAS,EAAE;AAAEH,MAAAA;AAAF,KADuD;AAElEV,IAAAA;AAFkE,GAAvB,CAA7C;AAIA,sBACE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,QAAQ,EAAEY,OAFZ;AAGE,IAAA,OAAO,EAAE,MAAM;AACb,UAAIE,OAAO,CAAC,8CAAD,CAAX,EAA6D;AAC3DN,QAAAA,UAAU,GAAGO,KAAb,CAAoBC,GAAD,IAASC,KAAK,CAACD,GAAG,CAACE,OAAL,CAAjC;AACD;AACF,KAPH;AAAA,cASGP;AATH;AAAA;AAAA;AAAA;AAAA,UADF;AAaD","sourcesContent":["import { useMutation } from \"@apollo/client\";\r\nimport gql from \"graphql-tag\";\r\n\r\nconst DELETE_USER_MUTATION = gql`\r\n  mutation DELETE_USER_MUTATION($id: ID!) {\r\n    deleteUser(id: $id) {\r\n      id\r\n      name\r\n    }\r\n  }\r\n`;\r\n\r\nfunction update(cache, payload) {\r\n  console.log(payload);\r\n  console.log(\"running the update function after delete\");\r\n  cache.evict(cache.identify(payload.data.deleteUser));\r\n}\r\n\r\nexport default function DeleteUser({ id, children }) {\r\n  const [deleteUser, { loading }] = useMutation(DELETE_USER_MUTATION, {\r\n    variables: { id },\r\n    update,\r\n  });\r\n  return (\r\n    <button\r\n      type=\"button\"\r\n      disabled={loading}\r\n      onClick={() => {\r\n        if (confirm(\"Are you sure, you want to delete this user? \")) {\r\n          deleteUser().catch((err) => alert(err.message));\r\n        }\r\n      }}\r\n    >\r\n      {children}\r\n    </button>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}