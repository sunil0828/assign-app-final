{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/SunilL/Downloads/assign-app/frontend/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/SunilL/Downloads/assign-app/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:/Users/SunilL/Downloads/assign-app/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"C:/Users/SunilL/Downloads/assign-app/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\SunilL\\\\Downloads\\\\assign-app\\\\frontend\\\\components\\\\UpdateUser.js\",\n    _s = $RefreshSig$();\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation UPDATE_USER_MUTATION($id: ID!, $name: String, $phoneNumber: Int) {\\n    updateUser(id: $id, data: { name: $name, phoneNumber: $phoneNumber }) {\\n      id\\n      name\\n      phoneNumber\\n    }\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query SINGLE_USER_QUERY($id: ID!) {\\n    User(where: { id: $id }) {\\n      id\\n      name\\n      email\\n      phoneNumber\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport gql from \"graphql-tag\";\nimport useForm from \"../lib/useForm\";\nvar SINGLE_USER_QUERY = gql(_templateObject());\nvar UPDATE_USER_MUTATION = gql(_templateObject2());\nexport default function UpdateUser(_ref) {\n  _s();\n\n  var id = _ref.id;\n\n  var _useQuery = useQuery(SINGLE_USER_QUERY, {\n    variables: {\n      id: id\n    }\n  }),\n      data = _useQuery.data,\n      error = _useQuery.error,\n      loading = _useQuery.loading;\n\n  console.log(data);\n\n  var _useMutation = useMutation(UPDATE_USER_MUTATION),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      updateUser = _useMutation2[0],\n      _useMutation2$ = _useMutation2[1],\n      updateData = _useMutation2$.data,\n      updateError = _useMutation2$.error,\n      updateLoading = _useMutation2$.loading;\n\n  console.log(data);\n\n  var _useForm = useForm((data === null || data === void 0 ? void 0 : data.User) || {\n    name: \"\",\n    phoneNumber: \"\"\n  }),\n      inputs = _useForm.inputs,\n      handleChange = _useForm.handleChange,\n      clearForm = _useForm.clearForm,\n      resetForm = _useForm.resetForm;\n\n  console.log(inputs);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                e.preventDefault();\n                _context.next = 3;\n                return updateUser({\n                  variables: {\n                    id: id,\n                    name: inputs.name,\n                    phoneNumber: inputs.phoneNumber\n                  }\n                })[\"catch\"](console.error);\n\n              case 3:\n                res = _context.sent;\n                console.log(res);\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }(),\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      error: error || updateError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: [\"Name\", /*#__PURE__*/_jsxDEV(\"input\", {\n          required: true,\n          type: \"text\",\n          id: \"name\",\n          placeholder: \"Name\",\n          value: inputs.name,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"phoneNumber\",\n        children: [\"Phone Number\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          placeholder: \"phone number\",\n          value: inputs.phoneNumber,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Update User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s(UpdateUser, \"hapPoSDi3gaR9MO7LeQMSSTUuoE=\", false, function () {\n  return [useQuery, useMutation, useForm];\n});\n\n_c = UpdateUser;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateUser\");","map":{"version":3,"sources":["C:/Users/SunilL/Downloads/assign-app/frontend/components/UpdateUser.js"],"names":["useMutation","useQuery","gql","useForm","SINGLE_USER_QUERY","UPDATE_USER_MUTATION","UpdateUser","id","variables","data","error","loading","console","log","updateUser","updateData","updateError","updateLoading","User","name","phoneNumber","inputs","handleChange","clearForm","resetForm","e","preventDefault","res"],"mappings":"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","sourcesContent":["import { useMutation, useQuery } from \"@apollo/client\";\r\nimport gql from \"graphql-tag\";\r\nimport useForm from \"../lib/useForm\";\r\n\r\nconst SINGLE_USER_QUERY = gql`\r\n  query SINGLE_USER_QUERY($id: ID!) {\r\n    User(where: { id: $id }) {\r\n      id\r\n      name\r\n      email\r\n      phoneNumber\r\n    }\r\n  }\r\n`;\r\n\r\nconst UPDATE_USER_MUTATION = gql`\r\n  mutation UPDATE_USER_MUTATION($id: ID!, $name: String, $phoneNumber: Int) {\r\n    updateUser(id: $id, data: { name: $name, phoneNumber: $phoneNumber }) {\r\n      id\r\n      name\r\n      phoneNumber\r\n    }\r\n  }\r\n`;\r\n\r\nexport default function UpdateUser({ id }) {\r\n  const { data, error, loading } = useQuery(SINGLE_USER_QUERY, {\r\n    variables: { id },\r\n  });\r\n  console.log(data);\r\n  const [\r\n    updateUser,\r\n    { data: updateData, error: updateError, loading: updateLoading },\r\n  ] = useMutation(UPDATE_USER_MUTATION);\r\n  console.log(data);\r\n  const { inputs, handleChange, clearForm, resetForm } = useForm(\r\n    data?.User || {\r\n      name: \"\",\r\n      phoneNumber: \"\",\r\n    }\r\n  );\r\n  console.log(inputs);\r\n  if (loading) return <p>Loading...</p>;\r\n  return (\r\n    <form\r\n      onSubmit={async (e) => {\r\n        e.preventDefault();\r\n        const res = await updateUser({\r\n          variables: {\r\n            id,\r\n            name: inputs.name,\r\n            phoneNumber: inputs.phoneNumber,\r\n          },\r\n        }).catch(console.error);\r\n        console.log(res);\r\n      }}\r\n    >\r\n      <p error={error || updateError} />\r\n      <fieldset>\r\n        <label htmlFor=\"name\">\r\n          Name\r\n          <input\r\n            required\r\n            type=\"text\"\r\n            id=\"name\"\r\n            placeholder=\"Name\"\r\n            value={inputs.name}\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n\r\n        <label htmlFor=\"phoneNumber\">\r\n          Phone Number\r\n          <input\r\n            type=\"number\"\r\n            placeholder=\"phone number\"\r\n            value={inputs.phoneNumber}\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n        <button type=\"submit\">Update User</button>\r\n      </fieldset>\r\n    </form>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}