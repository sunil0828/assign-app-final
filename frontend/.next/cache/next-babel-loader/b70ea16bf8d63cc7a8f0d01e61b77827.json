{"ast":null,"code":"import _slicedToArray from \"C:/Users/SunilL/Downloads/assign-app/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"C:/Users/SunilL/Downloads/assign-app/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation DELETE_USER_MUTATION($id: ID!) {\\n    deleteUser(id: $id) {\\n      id\\n      name\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { useMutation } from \"@apollo/client\";\nimport gql from \"graphql-tag\";\nvar DELETE_USER_MUTATION = gql(_templateObject());\n\nfunction update(cache, payload) {\n  console.log(payload);\n  console.log(\"running the update function after delete\");\n  cache.evict(cache.identify(payload.data.deleteUser));\n}\n\nexport default function DeleteUser(_ref) {\n  var id = _ref.id,\n      children = _ref.children;\n\n  var _useMutation = useMutation(DELETE_USER_MUTATION, {\n    variables: {\n      id: id\n    },\n    update: update\n  }),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      deleteUser = _useMutation2[0],\n      loading = _useMutation2[1].loading;\n\n  return /*#__PURE__*/_jsx(\"button\", {\n    type: \"button\",\n    disabled: loading,\n    onClick: function onClick() {\n      if (confirm(\"Are you sure, you want to delete this user? \")) {\n        deleteUser()[\"catch\"](function (err) {\n          return alert(err.message);\n        });\n      }\n    },\n    children: children\n  });\n}","map":null,"metadata":{},"sourceType":"module"}