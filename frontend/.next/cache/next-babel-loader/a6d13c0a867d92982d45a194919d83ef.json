{"ast":null,"code":"import _slicedToArray from \"C:/Users/SunilL/Downloads/assign-app/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"C:/Users/SunilL/Downloads/assign-app/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\SunilL\\\\Downloads\\\\assign-app\\\\frontend\\\\components\\\\DeleteUser.js\",\n    _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation DELETE_USER_MUTATION($id: ID!) {\\n    deleteUser(id: $id) {\\n      id\\n      name\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { useMutation } from \"@apollo/client\";\nimport gql from \"graphql-tag\";\nvar DELETE_USER_MUTATION = gql(_templateObject());\n\nfunction update(cache, payload) {\n  console.log(payload);\n  console.log(\"running the update function after delete\");\n  cache.evict(cache.identify(payload.data.deleteUser));\n}\n\nexport default function DeleteUser(_ref) {\n  _s();\n\n  var id = _ref.id,\n      children = _ref.children;\n\n  var _useMutation = useMutation(DELETE_USER_MUTATION, {\n    variables: {\n      id: id\n    },\n    update: update\n  }),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      deleteUser = _useMutation2[0],\n      loading = _useMutation2[1].loading;\n\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    type: \"button\",\n    disabled: loading,\n    onClick: function onClick() {\n      if (confirm(\"Are you sure, you want to delete this user? \")) {\n        deleteUser()[\"catch\"](function (err) {\n          return alert(err.message);\n        });\n      }\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DeleteUser, \"M1cBM0caweAQpYxNo5aXIeOrgUE=\", false, function () {\n  return [useMutation];\n});\n\n_c = DeleteUser;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeleteUser\");","map":{"version":3,"sources":["C:/Users/SunilL/Downloads/assign-app/frontend/components/DeleteUser.js"],"names":["useMutation","gql","DELETE_USER_MUTATION","update","cache","payload","console","log","evict","identify","data","deleteUser","DeleteUser","id","children","variables","loading","confirm","err","alert","message"],"mappings":";;;;;;;;;;;;;;;;;AAAA,SAASA,WAAT,QAA4B,gBAA5B;AACA,OAAOC,GAAP,MAAgB,aAAhB;AAEA,IAAMC,oBAAoB,GAAGD,GAAH,mBAA1B;;AASA,SAASE,MAAT,CAAgBC,KAAhB,EAAuBC,OAAvB,EAAgC;AAC9BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,0CAAZ;AACAH,EAAAA,KAAK,CAACI,KAAN,CAAYJ,KAAK,CAACK,QAAN,CAAeJ,OAAO,CAACK,IAAR,CAAaC,UAA5B,CAAZ;AACD;;AAED,eAAe,SAASC,UAAT,OAAsC;AAAA;;AAAA,MAAhBC,EAAgB,QAAhBA,EAAgB;AAAA,MAAZC,QAAY,QAAZA,QAAY;;AAAA,qBACjBd,WAAW,CAACE,oBAAD,EAAuB;AAClEa,IAAAA,SAAS,EAAE;AAAEF,MAAAA,EAAE,EAAFA;AAAF,KADuD;AAElEV,IAAAA,MAAM,EAANA;AAFkE,GAAvB,CADM;AAAA;AAAA,MAC5CQ,UAD4C;AAAA,MAC9BK,OAD8B,oBAC9BA,OAD8B;;AAKnD,sBACE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,QAAQ,EAAEA,OAFZ;AAGE,IAAA,OAAO,EAAE,mBAAM;AACb,UAAIC,OAAO,CAAC,8CAAD,CAAX,EAA6D;AAC3DN,QAAAA,UAAU,WAAV,CAAmB,UAACO,GAAD;AAAA,iBAASC,KAAK,CAACD,GAAG,CAACE,OAAL,CAAd;AAAA,SAAnB;AACD;AACF,KAPH;AAAA,cASGN;AATH;AAAA;AAAA;AAAA;AAAA,UADF;AAaD;;GAlBuBF,U;UACYZ,W;;;KADZY,U","sourcesContent":["import { useMutation } from \"@apollo/client\";\r\nimport gql from \"graphql-tag\";\r\n\r\nconst DELETE_USER_MUTATION = gql`\r\n  mutation DELETE_USER_MUTATION($id: ID!) {\r\n    deleteUser(id: $id) {\r\n      id\r\n      name\r\n    }\r\n  }\r\n`;\r\n\r\nfunction update(cache, payload) {\r\n  console.log(payload);\r\n  console.log(\"running the update function after delete\");\r\n  cache.evict(cache.identify(payload.data.deleteUser));\r\n}\r\n\r\nexport default function DeleteUser({ id, children }) {\r\n  const [deleteUser, { loading }] = useMutation(DELETE_USER_MUTATION, {\r\n    variables: { id },\r\n    update,\r\n  });\r\n  return (\r\n    <button\r\n      type=\"button\"\r\n      disabled={loading}\r\n      onClick={() => {\r\n        if (confirm(\"Are you sure, you want to delete this user? \")) {\r\n          deleteUser().catch((err) => alert(err.message));\r\n        }\r\n      }}\r\n    >\r\n      {children}\r\n    </button>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}