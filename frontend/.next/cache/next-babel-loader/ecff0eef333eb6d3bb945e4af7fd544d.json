{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/SunilL/Downloads/assign-app/frontend/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/SunilL/Downloads/assign-app/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:/Users/SunilL/Downloads/assign-app/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\SunilL\\\\Downloads\\\\assign-app\\\\frontend\\\\components\\\\CreateUser.js\",\n    _s = $RefreshSig$();\n\nimport { useMutation } from \"@apollo/client\";\nimport Router from \"next/router\";\nimport useForm from \"../lib/useForm\";\nimport ErrorMessage from \"./ErrorMessage\";\nimport { SIGNUP_MUTATION } from \"./SignUp\";\nimport Form from \"./styles/Form\";\nexport default function CreateUser() {\n  _s();\n\n  var _useForm = useForm({\n    email: \"\",\n    name: \"\",\n    password: \"\"\n  }),\n      inputs = _useForm.inputs,\n      handleChange = _useForm.handleChange,\n      resetForm = _useForm.resetForm;\n\n  var _useMutation = useMutation(SIGNUP_MUTATION, {\n    variables: inputs // refectch the currently logged in user\n    // refetchQueries: [{ query: CURRENT_USER_QUERY }],\n\n  }),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      signup = _useMutation2[0],\n      _useMutation2$ = _useMutation2[1],\n      data = _useMutation2$.data,\n      loading = _useMutation2$.loading,\n      error = _useMutation2$.error;\n\n  function handleSubmit(_x) {\n    return _handleSubmit.apply(this, arguments);\n  }\n\n  function _handleSubmit() {\n    _handleSubmit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault(); // stop the form from submitting\n\n              console.log(inputs);\n              _context.next = 4;\n              return signup()[\"catch\"](console.error);\n\n            case 4:\n              res = _context.sent;\n              console.log(res);\n              console.log({\n                data: data,\n                loading: loading,\n                error: error\n              });\n              resetForm();\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _handleSubmit.apply(this, arguments);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    method: \"POST\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add user account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n      error: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      children: [(data === null || data === void 0 ? void 0 : data.createUser) && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"User added with \", data.createUser.email, \"...!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 30\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: [\"Name\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          placeholder: \"User Name\",\n          autoComplete: \"name\",\n          value: inputs.name,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: [\"Email\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          placeholder: \"User Email Address\",\n          autoComplete: \"email\",\n          value: inputs.email,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: [\"Password\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          placeholder: \"Password\",\n          autoComplete: \"password\",\n          value: inputs.password,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CreateUser, \"fSO9UAX3bbbf5xQ0esX282JvdkI=\", false, function () {\n  return [useForm, useMutation];\n});\n\n_c = CreateUser;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateUser\");","map":{"version":3,"sources":["C:/Users/SunilL/Downloads/assign-app/frontend/components/CreateUser.js"],"names":["useMutation","Router","useForm","ErrorMessage","SIGNUP_MUTATION","Form","CreateUser","email","name","password","inputs","handleChange","resetForm","variables","signup","data","loading","error","handleSubmit","e","preventDefault","console","log","res","createUser"],"mappings":"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","sourcesContent":["import { useMutation } from \"@apollo/client\";\r\nimport Router from \"next/router\";\r\nimport useForm from \"../lib/useForm\";\r\nimport ErrorMessage from \"./ErrorMessage\";\r\nimport { SIGNUP_MUTATION } from \"./SignUp\";\r\nimport Form from \"./styles/Form\";\r\n\r\nexport default function CreateUser() {\r\n  const { inputs, handleChange, resetForm } = useForm({\r\n    email: \"\",\r\n    name: \"\",\r\n    password: \"\",\r\n  });\r\n  const [signup, { data, loading, error }] = useMutation(SIGNUP_MUTATION, {\r\n    variables: inputs,\r\n    // refectch the currently logged in user\r\n    // refetchQueries: [{ query: CURRENT_USER_QUERY }],\r\n  });\r\n  async function handleSubmit(e) {\r\n    e.preventDefault(); // stop the form from submitting\r\n    console.log(inputs);\r\n    const res = await signup().catch(console.error);\r\n    console.log(res);\r\n\r\n    console.log({ data, loading, error });\r\n    resetForm();\r\n  }\r\n  return (\r\n    <Form method=\"POST\" onSubmit={handleSubmit}>\r\n      <h2>Add user account</h2>\r\n      <ErrorMessage error={error} />\r\n      <fieldset>\r\n        {data?.createUser && <p>User added with {data.createUser.email}...!</p>}\r\n        <label htmlFor=\"name\">\r\n          Name\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            placeholder=\"User Name\"\r\n            autoComplete=\"name\"\r\n            value={inputs.name}\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n        <label htmlFor=\"email\">\r\n          Email\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            placeholder=\"User Email Address\"\r\n            autoComplete=\"email\"\r\n            value={inputs.email}\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n\r\n        <label htmlFor=\"password\">\r\n          Password\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            placeholder=\"Password\"\r\n            autoComplete=\"password\"\r\n            value={inputs.password}\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n        <button type=\"submit\">Add User</button>\r\n      </fieldset>\r\n    </Form>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}