{"ast":null,"code":"import _taggedTemplateLiteral from \"C:/Users/SunilL/Downloads/assign-app/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\SunilL\\\\Downloads\\\\assign-app\\\\frontend\\\\components\\\\Users.js\",\n    _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query ALL_USERS_QUERY($skip: Int = 0, $first: Int) {\\n    allUsers(first: $first, skip: $skip) {\\n      id\\n      name\\n      email\\n      phoneNumber\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { useQuery } from \"@apollo/client\";\nimport gql from \"graphql-tag\";\nimport { perPage } from \"../config\";\nimport Table from \"./styles/Table\";\nimport User from \"./User\";\nexport var ALL_USERS_QUERY = gql(_templateObject());\nexport default function Users(_ref) {\n  _s();\n\n  var _this = this;\n\n  var page = _ref.page;\n\n  var _useQuery = useQuery(ALL_USERS_QUERY, {\n    variables: {\n      skip: page * perPage - perPage,\n      first: perPage\n    }\n  }),\n      data = _useQuery.data,\n      error = _useQuery.error,\n      loading = _useQuery.loading;\n\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Error : \", error.message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 21\n  }, this);\n  console.log(data);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: data.allUsers.map(function (user) {\n      return /*#__PURE__*/_jsxDEV(User, {\n        user: user\n      }, user.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, _this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Users, \"eE+cqeCo2lkI//dPlCsO1rICVGU=\", false, function () {\n  return [useQuery];\n});\n\n_c = Users;\n\nvar _c;\n\n$RefreshReg$(_c, \"Users\");","map":{"version":3,"sources":["C:/Users/SunilL/Downloads/assign-app/frontend/components/Users.js"],"names":["useQuery","gql","perPage","Table","User","ALL_USERS_QUERY","Users","page","variables","skip","first","data","error","loading","message","console","log","allUsers","map","user","id"],"mappings":";;;;;;;;;;;;;;;;AAAA,SAASA,QAAT,QAAyB,gBAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AAEA,OAAO,IAAMC,eAAe,GAAGJ,GAAH,mBAArB;AAUP,eAAe,SAASK,KAAT,OAAyB;AAAA;;AAAA;;AAAA,MAARC,IAAQ,QAARA,IAAQ;;AAAA,kBACLP,QAAQ,CAACK,eAAD,EAAkB;AACzDG,IAAAA,SAAS,EAAE;AACTC,MAAAA,IAAI,EAAEF,IAAI,GAAGL,OAAP,GAAiBA,OADd;AAETQ,MAAAA,KAAK,EAAER;AAFE;AAD8C,GAAlB,CADH;AAAA,MAC9BS,IAD8B,aAC9BA,IAD8B;AAAA,MACxBC,KADwB,aACxBA,KADwB;AAAA,MACjBC,OADiB,aACjBA,OADiB;;AAOtC,MAAIA,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACb,MAAID,KAAJ,EAAW,oBAAO;AAAA,2BAAYA,KAAK,CAACE,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACXC,EAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ;AACA,sBACE;AAAA,cACGA,IAAI,CAACM,QAAL,CAAcC,GAAd,CAAkB,UAACC,IAAD;AAAA,0BACjB,QAAC,IAAD;AAAoB,QAAA,IAAI,EAAEA;AAA1B,SAAWA,IAAI,CAACC,EAAhB;AAAA;AAAA;AAAA;AAAA,eADiB;AAAA,KAAlB;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GAjBuBd,K;UACWN,Q;;;KADXM,K","sourcesContent":["import { useQuery } from \"@apollo/client\";\r\nimport gql from \"graphql-tag\";\r\nimport { perPage } from \"../config\";\r\nimport Table from \"./styles/Table\";\r\nimport User from \"./User\";\r\n\r\nexport const ALL_USERS_QUERY = gql`\r\n  query ALL_USERS_QUERY($skip: Int = 0, $first: Int) {\r\n    allUsers(first: $first, skip: $skip) {\r\n      id\r\n      name\r\n      email\r\n      phoneNumber\r\n    }\r\n  }\r\n`;\r\nexport default function Users({ page }) {\r\n  const { data, error, loading } = useQuery(ALL_USERS_QUERY, {\r\n    variables: {\r\n      skip: page * perPage - perPage,\r\n      first: perPage,\r\n    },\r\n  });\r\n  if (loading) return <p>Loading...</p>;\r\n  if (error) return <p>Error : {error.message}</p>;\r\n  console.log(data);\r\n  return (\r\n    <div>\r\n      {data.allUsers.map((user) => (\r\n        <User key={user.id} user={user} />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}