{"ast":null,"code":"import _defineProperty from \"C:/Users/SunilL/Downloads/assign-app/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"C:/Users/SunilL/Downloads/assign-app/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"C:/Users/SunilL/Downloads/assign-app/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport { createElement as _createElement } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\SunilL\\\\Downloads\\\\assign-app\\\\frontend\\\\components\\\\Search.js\",\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query SEARCH_USERS_QUERY($searchTerm: String!) {\\n    searchTerms: allUsers(where: { OR: [{ name_contains_i: $searchTerm }] }) {\\n      id\\n      name\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { useLazyQuery } from \"@apollo/client\";\nimport { resetIdCounter, useCombobox } from \"downshift\";\nimport gql from \"graphql-tag\";\nimport debounce from \"lodash.debounce\";\nimport { useRouter } from \"next/dist/client/router\";\nimport { DropDown, DropDownItem, SearchStyles } from \"./styles/DropDown\";\nvar SEARCH_USERS_QUERY = gql(_templateObject());\nexport default function Search() {\n  _s();\n\n  var _this = this;\n\n  var router = useRouter();\n\n  var _useLazyQuery = useLazyQuery(SEARCH_USERS_QUERY, {\n    fetchPolicy: \"no-cache\"\n  }),\n      _useLazyQuery2 = _slicedToArray(_useLazyQuery, 2),\n      findUsers = _useLazyQuery2[0],\n      _useLazyQuery2$ = _useLazyQuery2[1],\n      loading = _useLazyQuery2$.loading,\n      data = _useLazyQuery2$.data,\n      error = _useLazyQuery2$.error;\n\n  var users = (data === null || data === void 0 ? void 0 : data.searchTerms) || [];\n  var findUsersButChill = debounce(findUsers, 350);\n  resetIdCounter();\n\n  var _useCombobox = useCombobox({\n    users: users,\n    onInputValueChange: function onInputValueChange() {\n      findUsersButChill({\n        variables: {\n          searchTerm: inputValue\n        }\n      });\n    },\n    onSelecteduserChange: function onSelecteduserChange(_ref) {\n      var selecteduser = _ref.selecteduser;\n      router.push({\n        pathname: \"/user/\".concat(selecteduser.id)\n      });\n    },\n    userToString: function userToString(user) {\n      return (user === null || user === void 0 ? void 0 : user.name) || \"\";\n    }\n  }),\n      isOpen = _useCombobox.isOpen,\n      inputValue = _useCombobox.inputValue,\n      getMenuProps = _useCombobox.getMenuProps,\n      getInputProps = _useCombobox.getInputProps,\n      getComboboxProps = _useCombobox.getComboboxProps,\n      getuserProps = _useCombobox.getuserProps,\n      highlightedIndex = _useCombobox.highlightedIndex;\n\n  return /*#__PURE__*/_jsxDEV(SearchStyles, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", _objectSpread(_objectSpread({}, getComboboxProps()), {}, {\n      children: /*#__PURE__*/_jsxDEV(\"input\", _objectSpread({}, getInputProps({\n        type: \"search\",\n        placeholder: \"Search for an user\",\n        id: \"search\",\n        className: loading ? \"loading\" : \"\"\n      })), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DropDown, _objectSpread(_objectSpread({}, getMenuProps()), {}, {\n      children: [isOpen && users.map(function (user, index) {\n        return /*#__PURE__*/_createElement(DropDownItem, _objectSpread(_objectSpread({}, getuserProps({\n          user: user\n        })), {}, {\n          key: user.id,\n          highlighted: index === highlightedIndex,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          },\n          __self: _this\n        }), user.name);\n      }), isOpen && !users.length && !loading && /*#__PURE__*/_jsxDEV(DropDownItem, {\n        children: [\"Sorry, No users found for \", inputValue]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this)]\n    }), void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Search, \"MluREXqXPwOJbxQUs9t/6rsz6n8=\", false, function () {\n  return [useRouter, useLazyQuery, useCombobox];\n});\n\n_c = Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["C:/Users/SunilL/Downloads/assign-app/frontend/components/Search.js"],"names":["useLazyQuery","resetIdCounter","useCombobox","gql","debounce","useRouter","DropDown","DropDownItem","SearchStyles","SEARCH_USERS_QUERY","Search","router","fetchPolicy","findUsers","loading","data","error","users","searchTerms","findUsersButChill","onInputValueChange","variables","searchTerm","inputValue","onSelecteduserChange","selecteduser","push","pathname","id","userToString","user","name","isOpen","getMenuProps","getInputProps","getComboboxProps","getuserProps","highlightedIndex","type","placeholder","className","map","index","length"],"mappings":"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","sourcesContent":["import { useLazyQuery } from \"@apollo/client\";\r\nimport { resetIdCounter, useCombobox } from \"downshift\";\r\nimport gql from \"graphql-tag\";\r\nimport debounce from \"lodash.debounce\";\r\nimport { useRouter } from \"next/dist/client/router\";\r\nimport { DropDown, DropDownItem, SearchStyles } from \"./styles/DropDown\";\r\n\r\nconst SEARCH_USERS_QUERY = gql`\r\n  query SEARCH_USERS_QUERY($searchTerm: String!) {\r\n    searchTerms: allUsers(where: { OR: [{ name_contains_i: $searchTerm }] }) {\r\n      id\r\n      name\r\n    }\r\n  }\r\n`;\r\n\r\nexport default function Search() {\r\n  const router = useRouter();\r\n  const [findUsers, { loading, data, error }] = useLazyQuery(\r\n    SEARCH_USERS_QUERY,\r\n    {\r\n      fetchPolicy: \"no-cache\",\r\n    }\r\n  );\r\n  const users = data?.searchTerms || [];\r\n  const findUsersButChill = debounce(findUsers, 350);\r\n  resetIdCounter();\r\n  const {\r\n    isOpen,\r\n    inputValue,\r\n    getMenuProps,\r\n    getInputProps,\r\n    getComboboxProps,\r\n    getuserProps,\r\n    highlightedIndex,\r\n  } = useCombobox({\r\n    users,\r\n    onInputValueChange() {\r\n      findUsersButChill({\r\n        variables: {\r\n          searchTerm: inputValue,\r\n        },\r\n      });\r\n    },\r\n    onSelecteduserChange({ selecteduser }) {\r\n      router.push({\r\n        pathname: `/user/${selecteduser.id}`,\r\n      });\r\n    },\r\n    userToString: (user) => user?.name || \"\",\r\n  });\r\n  return (\r\n    <SearchStyles>\r\n      <div {...getComboboxProps()}>\r\n        <input\r\n          {...getInputProps({\r\n            type: \"search\",\r\n            placeholder: \"Search for an user\",\r\n            id: \"search\",\r\n            className: loading ? \"loading\" : \"\",\r\n          })}\r\n        />\r\n      </div>\r\n      <DropDown {...getMenuProps()}>\r\n        {isOpen &&\r\n          users.map((user, index) => (\r\n            <DropDownItem\r\n              {...getuserProps({ user })}\r\n              key={user.id}\r\n              highlighted={index === highlightedIndex}\r\n            >\r\n              {user.name}\r\n            </DropDownItem>\r\n          ))}\r\n        {isOpen && !users.length && !loading && (\r\n          <DropDownItem>Sorry, No users found for {inputValue}</DropDownItem>\r\n        )}\r\n      </DropDown>\r\n    </SearchStyles>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}